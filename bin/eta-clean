#!/usr/bin/env node

const program = require('commander');
const spawn = require('child_process').spawn;
const chalk = require('chalk');
const inquirer = require('inquirer');

const LOGO = chalk.bold.yellow(' ETA™ ');

program
  .description('WARNING! This will remove all containers & images')
  .parse(process.argv);

// console.dir(program.Command);
inquirer.prompt([{
  type: 'confirm',
  name: 'remove',
  message: 'WARNING! This will remove & clean all containers. Continue?',
  default: true,
}], (answers) => {
  if (answers.remove) {
    const containersData = spawn('docker', ['ps', '-a', '-q']);
    containersData.stdout.setEncoding('utf8');

    containersData.stdout.on('data', (data) => {
      const containers = data.trim().split('\n');

      if (containers.length > 0) {
        console.log(`${LOGO} ${chalk.blue('Info! removing containers...')}`);

        containers.forEach((container) => {
          spawn('docker', ['rm', '-f', container], { stdio: 'ignore' });
          console.log(`${LOGO} ${chalk.green(`Success! ${chalk.red('×')} removed container ${container}`)}`);
        });
      } else {
        console.log(`${LOGO} ${chalk.red('Error! There is no containers to remove')}`);
      }
    });

    const imagesData = spawn('docker', ['images', '-f', 'dangling=true', '-q']);
    imagesData.stdout.setEncoding('utf8');

    imagesData.stdout.on('data', (data) => {
      const images = data.trim().split('\n');

      if (images.length > 0) {
        console.log(`${LOGO} ${chalk.blue('Info! removing images...')}`);

        images.forEach((image) => {
          spawn('docker', ['rmi', '-f', image], { stdio: 'ignore' });
          console.log(`${LOGO} ${chalk.green(`Success! ${chalk.red('×')} removed image ${image}`)}`);
        });
      } else {
        console.log(`${LOGO} ${chalk.red('Error! There is no images to remove')}`);
      }
    });
  }
});
